{"ast":null,"code":"var _jsxFileName = \"/Users/b002055/USNews/my-app/src/components/comment/Comment.js\";\nimport React from \"react\";\nimport { CommentForm } from \"./CommentForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Comment = _ref => {\n  let {\n    comment,\n    replies,\n    currentUserId,\n    deleteComment,\n    activateComment,\n    setActiveComment,\n    parentId = null,\n    addComment,\n    editComment\n  } = _ref;\n  const isLoggedIn = Boolean(currentUserId); //this Boolean is to check if user is logged in. If null, then the boolean is false, else it is true\n\n  const createdAtDate = new Date(comment.createdAt).toLocaleDateString();\n  const isReplying = activateComment && activateComment.type === \"replying\" && activateComment.id === comment.id;\n  const isEditing = activateComment && activateComment.type === \"editing\" && activateComment.id === comment.id;\n  const replyId = parentId ? parentId : comment.id;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"comment\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comment-image-container\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"https://cdn.pixabay.com/photo/2020/07/14/13/07/icon-5404125_1280.png\",\n        height: 50,\n        width: 50\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comment-right\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comment-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comment-author\",\n          children: comment.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: createdAtDate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), !isEditing && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comment-text\",\n        children: comment.body\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 24\n      }, this), isEditing && /*#__PURE__*/_jsxDEV(CommentForm, {\n        labelSubmit: \"Update\",\n        cancelButton: true,\n        baseText: comment.body,\n        submitHandler: text => editComment(text, comment.id),\n        cancelHandler: () => setActiveComment(null)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comment-actions\",\n        children: [isLoggedIn && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comment-action\",\n          onClick: () => setActiveComment({\n            id: comment.id,\n            type: \"replying\"\n          }),\n          children: \"Reply\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this), isLoggedIn && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comment-action\",\n          onClick: () => setActiveComment({\n            id: comment.id,\n            type: \"editing\"\n          }),\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this), isLoggedIn && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comment-action\",\n          onClick: () => deleteComment(comment.id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), isReplying && /*#__PURE__*/_jsxDEV(CommentForm, {\n        labelSubmit: \"Reply\",\n        submitHandler: text => addComment(text, replyId)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this), replies.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"replies\",\n        children: replies.map(reply => /*#__PURE__*/_jsxDEV(Comment, {\n          comment: reply,\n          replies: [],\n          currentUserId: currentUserId,\n          addComment: addComment,\n          deleteComment: deleteComment,\n          activateComment: activateComment,\n          editComment: editComment,\n          setActiveComment: setActiveComment,\n          parentId: comment.id\n        }, reply.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_c = Comment;\n\nvar _c;\n\n$RefreshReg$(_c, \"Comment\");","map":{"version":3,"sources":["/Users/b002055/USNews/my-app/src/components/comment/Comment.js"],"names":["React","CommentForm","Comment","comment","replies","currentUserId","deleteComment","activateComment","setActiveComment","parentId","addComment","editComment","isLoggedIn","Boolean","createdAtDate","Date","createdAt","toLocaleDateString","isReplying","type","id","isEditing","replyId","username","body","text","length","map","reply"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,eAA5B;;AAEA,OAAO,MAAMC,OAAO,GAAG,QAUjB;AAAA,MAVkB;AACtBC,IAAAA,OADsB;AAEtBC,IAAAA,OAFsB;AAGtBC,IAAAA,aAHsB;AAItBC,IAAAA,aAJsB;AAKtBC,IAAAA,eALsB;AAMtBC,IAAAA,gBANsB;AAOtBC,IAAAA,QAAQ,GAAG,IAPW;AAQtBC,IAAAA,UARsB;AAStBC,IAAAA;AATsB,GAUlB;AACJ,QAAMC,UAAU,GAAGC,OAAO,CAACR,aAAD,CAA1B,CADI,CACuC;;AAC3C,QAAMS,aAAa,GAAG,IAAIC,IAAJ,CAASZ,OAAO,CAACa,SAAjB,EAA4BC,kBAA5B,EAAtB;AACA,QAAMC,UAAU,GACdX,eAAe,IACfA,eAAe,CAACY,IAAhB,KAAyB,UADzB,IAEAZ,eAAe,CAACa,EAAhB,KAAuBjB,OAAO,CAACiB,EAHjC;AAIA,QAAMC,SAAS,GACbd,eAAe,IACfA,eAAe,CAACY,IAAhB,KAAyB,SADzB,IAEAZ,eAAe,CAACa,EAAhB,KAAuBjB,OAAO,CAACiB,EAHjC;AAIA,QAAME,OAAO,GAAGb,QAAQ,GAAGA,QAAH,GAAcN,OAAO,CAACiB,EAA9C;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,yBAAf;AAAA,6BACE;AACE,QAAA,GAAG,EAAC,sEADN;AAEE,QAAA,MAAM,EAAE,EAFV;AAGE,QAAA,KAAK,EAAE;AAHT;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAQE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,gBAAf;AAAA,oBAAiCjB,OAAO,CAACoB;AAAzC;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,oBAAMT;AAAN;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAKG,CAACO,SAAD,iBAAc;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,kBAA+BlB,OAAO,CAACqB;AAAvC;AAAA;AAAA;AAAA;AAAA,cALjB,EAMGH,SAAS,iBACR,QAAC,WAAD;AACE,QAAA,WAAW,EAAC,QADd;AAEE,QAAA,YAAY,MAFd;AAGE,QAAA,QAAQ,EAAElB,OAAO,CAACqB,IAHpB;AAIE,QAAA,aAAa,EAAGC,IAAD,IAAUd,WAAW,CAACc,IAAD,EAAOtB,OAAO,CAACiB,EAAf,CAJtC;AAKE,QAAA,aAAa,EAAE,MAAMZ,gBAAgB,CAAC,IAAD;AALvC;AAAA;AAAA;AAAA;AAAA,cAPJ,eAeE;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA,mBACGI,UAAU,iBACT;AACE,UAAA,SAAS,EAAC,gBADZ;AAEE,UAAA,OAAO,EAAE,MACPJ,gBAAgB,CAAC;AAAEY,YAAAA,EAAE,EAAEjB,OAAO,CAACiB,EAAd;AAAkBD,YAAAA,IAAI,EAAE;AAAxB,WAAD,CAHpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,EAWGP,UAAU,iBACT;AACE,UAAA,SAAS,EAAC,gBADZ;AAEE,UAAA,OAAO,EAAE,MACPJ,gBAAgB,CAAC;AAAEY,YAAAA,EAAE,EAAEjB,OAAO,CAACiB,EAAd;AAAkBD,YAAAA,IAAI,EAAE;AAAxB,WAAD,CAHpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAZJ,EAqBGP,UAAU,iBACT;AACE,UAAA,SAAS,EAAC,gBADZ;AAEE,UAAA,OAAO,EAAE,MAAMN,aAAa,CAACH,OAAO,CAACiB,EAAT,CAF9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAtBJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAfF,EA6CGF,UAAU,iBACT,QAAC,WAAD;AACE,QAAA,WAAW,EAAC,OADd;AAEE,QAAA,aAAa,EAAGO,IAAD,IAAUf,UAAU,CAACe,IAAD,EAAOH,OAAP;AAFrC;AAAA;AAAA;AAAA;AAAA,cA9CJ,EAmDGlB,OAAO,CAACsB,MAAR,GAAiB,CAAjB,iBACC;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA,kBACGtB,OAAO,CAACuB,GAAR,CAAaC,KAAD,iBACX,QAAC,OAAD;AAEE,UAAA,OAAO,EAAEA,KAFX;AAGE,UAAA,OAAO,EAAE,EAHX;AAIE,UAAA,aAAa,EAAEvB,aAJjB;AAKE,UAAA,UAAU,EAAEK,UALd;AAME,UAAA,aAAa,EAAEJ,aANjB;AAOE,UAAA,eAAe,EAAEC,eAPnB;AAQE,UAAA,WAAW,EAAEI,WARf;AASE,UAAA,gBAAgB,EAAEH,gBATpB;AAUE,UAAA,QAAQ,EAAEL,OAAO,CAACiB;AAVpB,WACOQ,KAAK,CAACR,EADb;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA,cApDJ;AAAA;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiFD,CAvGM;KAAMlB,O","sourcesContent":["import React from \"react\";\nimport { CommentForm } from \"./CommentForm\";\n\nexport const Comment = ({\n  comment,\n  replies,\n  currentUserId,\n  deleteComment,\n  activateComment,\n  setActiveComment,\n  parentId = null,\n  addComment,\n  editComment\n}) => {\n  const isLoggedIn = Boolean(currentUserId); //this Boolean is to check if user is logged in. If null, then the boolean is false, else it is true\n  const createdAtDate = new Date(comment.createdAt).toLocaleDateString();\n  const isReplying =\n    activateComment &&\n    activateComment.type === \"replying\" &&\n    activateComment.id === comment.id;\n  const isEditing =\n    activateComment &&\n    activateComment.type === \"editing\" &&\n    activateComment.id === comment.id;\n  const replyId = parentId ? parentId : comment.id;\n  return (\n    <div className=\"comment\">\n      <div className=\"comment-image-container\">\n        <img\n          src=\"https://cdn.pixabay.com/photo/2020/07/14/13/07/icon-5404125_1280.png\"\n          height={50}\n          width={50}\n        />\n      </div>\n      <div className=\"comment-right\">\n        <div className=\"comment-content\">\n          <div className=\"comment-author\">{comment.username}</div>\n          <div>{createdAtDate}</div>\n        </div>\n        {!isEditing && <div className=\"comment-text\">{comment.body}</div>}\n        {isEditing && (\n          <CommentForm\n            labelSubmit=\"Update\"\n            cancelButton\n            baseText={comment.body}\n            submitHandler={(text) => editComment(text, comment.id)}\n            cancelHandler={() => setActiveComment(null)}\n          />\n        )}\n        <div className=\"comment-actions\">\n          {isLoggedIn && (\n            <div\n              className=\"comment-action\"\n              onClick={() =>\n                setActiveComment({ id: comment.id, type: \"replying\" })\n              }\n            >\n              Reply\n            </div>\n          )}\n          {isLoggedIn && (\n            <div\n              className=\"comment-action\"\n              onClick={() =>\n                setActiveComment({ id: comment.id, type: \"editing\" })\n              }\n            >\n              Edit\n            </div>\n          )}\n          {isLoggedIn && (\n            <div\n              className=\"comment-action\"\n              onClick={() => deleteComment(comment.id)}\n            >\n              Delete\n            </div>\n          )}\n        </div>\n        {isReplying && (\n          <CommentForm\n            labelSubmit=\"Reply\"\n            submitHandler={(text) => addComment(text, replyId)}\n          />\n        )}\n        {replies.length > 0 && (\n          <div className=\"replies\">\n            {replies.map((reply) => (\n              <Comment\n                key={reply.id}\n                comment={reply}\n                replies={[]}\n                currentUserId={currentUserId}\n                addComment={addComment}\n                deleteComment={deleteComment}\n                activateComment={activateComment}\n                editComment={editComment}\n                setActiveComment={setActiveComment}\n                parentId={comment.id}\n              />\n            ))}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}