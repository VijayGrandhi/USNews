{"ast":null,"code":"var _jsxFileName = \"/Users/mshah/Documents/Software_project/USNews/my-app/src/components/comment/Comments.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport { getComments as getCommentsApi, createComment as createCommentApi, deleteComment as deleteCommentApi } from \"./commentapi\";\nimport { Comment } from \"./Comment\";\nimport { CommentForm } from \"./CommentForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Comments = _ref => {\n  _s();\n\n  let {\n    currentUserId\n  } = _ref;\n  const [commentBackEnd, setCommentBackEnd] = useState([]);\n  const [activateComment, setActiveComment] = useState(null);\n  const baseComments = commentBackEnd.filter(commentBackEnd => commentBackEnd.parentId === null);\n\n  const getReplies = commentId => {\n    return commentBackEnd.filter(singleCommentBackEnd => singleCommentBackEnd.parentId === commentId).sort((x, y) => new Date(x.createdAt).getTime() - new Date(y.createdAt).getTime());\n  };\n\n  const addComment = (text, parentId) => {\n    createCommentApi(text, parentId).then(comment => {\n      setCommentBackEnd([comment, ...commentBackEnd]);\n    });\n  };\n\n  const deleteComment = commentId => {\n    if (window.confirm('Are you sure you want to Delete?')) {\n      deleteCommentApi(commentId).then(() => {\n        const updatedComments = commentBackEnd.filter(singleCommentBackEnd => singleCommentBackEnd.id !== commentId);\n        setCommentBackEnd(updatedComments);\n      });\n    }\n  };\n\n  const editComment = (text, commentId) => {\n    const currentId = commentId;\n    const updateCommentsBackend = commentBackEnd.map(singleCommentBackEnd => {\n      if (singleCommentBackEnd.id === currentId) {\n        return { ...singleCommentBackEnd,\n          body: text\n        };\n      }\n\n      return singleCommentBackEnd;\n    });\n    setCommentBackEnd(updateCommentsBackend);\n    setActiveComment(null);\n  };\n\n  useEffect(() => {\n    getCommentsApi().then(data => {\n      setCommentBackEnd(data);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"comments\",\n    children: [/*#__PURE__*/_jsxDEV(\"hr\", {\n      class: \"solid\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h7\", {\n      className: \"comments-title\",\n      style: {\n        color: \"darkslategray\"\n      },\n      children: \"Comments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comments-form-title\",\n      children: /*#__PURE__*/_jsxDEV(\"i\", {\n        children: \"Comment your thoughts below\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 46\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CommentForm, {\n      labelSubmit: \"Add comment\",\n      submitHandler: addComment\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comments-container\",\n      children: baseComments.map(baseComment => /*#__PURE__*/_jsxDEV(Comment, {\n        comment: baseComment,\n        replies: getReplies(baseComment.id),\n        currentUserId: currentUserId,\n        deleteComment: deleteComment,\n        activateComment: activateComment,\n        setActiveComment: setActiveComment,\n        editComment: editComment,\n        addComment: addComment\n      }, baseComment.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Comments, \"l/cLmjOf9CiKxXOePeXcndlph18=\");\n\n_c = Comments;\n\nvar _c;\n\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"sources":["/Users/mshah/Documents/Software_project/USNews/my-app/src/components/comment/Comments.js"],"names":["React","useEffect","useState","getComments","getCommentsApi","createComment","createCommentApi","deleteComment","deleteCommentApi","Comment","CommentForm","Comments","currentUserId","commentBackEnd","setCommentBackEnd","activateComment","setActiveComment","baseComments","filter","parentId","getReplies","commentId","singleCommentBackEnd","sort","x","y","Date","createdAt","getTime","addComment","text","then","comment","window","confirm","updatedComments","id","editComment","currentId","updateCommentsBackend","map","body","data","color","baseComment"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport { getComments as getCommentsApi, createComment as createCommentApi, deleteComment as deleteCommentApi } from \"./commentapi\";\nimport { Comment } from \"./Comment\";\nimport { CommentForm } from \"./CommentForm\";\n\nexport const Comments = ({ currentUserId }) => {\n  const [commentBackEnd, setCommentBackEnd] = useState([]);\n  const [activateComment, setActiveComment] = useState(null);\n\n  const baseComments = commentBackEnd.filter(\n    (commentBackEnd) => commentBackEnd.parentId === null\n  );\n  const getReplies = (commentId) => {\n    return commentBackEnd\n      .filter(\n        (singleCommentBackEnd) => singleCommentBackEnd.parentId === commentId\n      )\n      .sort(\n        (x, y) =>\n          new Date(x.createdAt).getTime() - new Date(y.createdAt).getTime()\n      );\n  };\n  const addComment = (text, parentId) => {\n      createCommentApi(text, parentId).then(comment => {\n          setCommentBackEnd([comment, ...commentBackEnd])\n      })\n  }\n  const deleteComment = (commentId) => {\n    if (window.confirm('Are you sure you want to Delete?')) {\n        deleteCommentApi(commentId).then(()=>{\n            const updatedComments = commentBackEnd.filter(\n                (singleCommentBackEnd) => singleCommentBackEnd.id !== commentId\n            )\n            setCommentBackEnd(updatedComments)\n        })\n    }\n  }\n  const editComment = (text, commentId) => {\n      const currentId = commentId\n      const updateCommentsBackend = commentBackEnd.map(singleCommentBackEnd => {\n          if( singleCommentBackEnd.id === currentId ) {\n            return {...singleCommentBackEnd, body: text}\n          }\n          return singleCommentBackEnd\n      })\n      setCommentBackEnd(updateCommentsBackend)\n      setActiveComment(null)\n  }\n\n  useEffect(() => {\n    getCommentsApi().then((data) => {\n      setCommentBackEnd(data);\n    });\n  }, []);\n\n  return (\n    <div className=\"comments\">\n      <hr class=\"solid\"></hr>\n      <h7 className=\"comments-title\" style={\n        {color: \"darkslategray\"}\n      }>Comments</h7>\n      <div className = 'comments-form-title'><i>Comment your thoughts below</i></div>\n      <CommentForm labelSubmit = 'Add comment' submitHandler = {addComment} />\n      <div className=\"comments-container\">\n        {baseComments.map((baseComment) => (\n          <Comment\n            key={baseComment.id}\n            comment={baseComment}\n            replies={getReplies(baseComment.id)}\n            currentUserId={currentUserId}\n            deleteComment={deleteComment}\n            activateComment={activateComment}\n            setActiveComment={setActiveComment}\n            editComment={editComment}\n            addComment={addComment}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}